{"version":3,"file":"component---src-templates-individual-methodology-js-41c1a4a8064d0039296a.js","mappings":"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","sources":["webpack://metodologias-de-desarrollo-de-proyectos/./node_modules/react-string-replace/index.js","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/utils/Seo.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/styles/individualMethodology.module.css","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/utils/TextFormatter.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/page/IndividualMethodology/ImageConcept.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/page/IndividualMethodology/SectionContent.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/page/IndividualMethodology/SpecialSection.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/utils/ReferenceFormatter.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/page/IndividualMethodology/ReferencesSection.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/templates/IndividualMethodology.js"],"sourcesContent":["/* eslint-disable vars-on-top, no-var, prefer-template */\nvar isRegExp = function isRegExp(re) {\n  return re instanceof RegExp;\n};\n\nvar escapeRegExp = function escapeRegExp(string) {\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n  return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\\\$&') : string;\n};\n\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\n\nvar flatten = function flatten(array) {\n  var newArray = [];\n  array.forEach(function (item) {\n    if (Array.isArray(item)) {\n      newArray = newArray.concat(item);\n    } else {\n      newArray.push(item);\n    }\n  });\n  return newArray;\n};\n/**\n * Given a string, replace every substring that is matched by the `match` regex\n * with the result of calling `fn` on matched substring. The result will be an\n * array with all odd indexed elements containing the replacements. The primary\n * use case is similar to using String.prototype.replace except for React.\n *\n * React will happily render an array as children of a react element, which\n * makes this approach very useful for tasks like surrounding certain text\n * within a string with react elements.\n *\n * Example:\n * matchReplace(\n *   'Emphasize all phone numbers like 884-555-4443.',\n *   /([\\d|-]+)/g,\n *   (number, i) => <strong key={i}>{number}</strong>\n * );\n * // => ['Emphasize all phone numbers like ', <strong>884-555-4443</strong>, '.'\n *\n * @param {string} str\n * @param {RegExp|str} match Must contain a matching group\n * @param {function} fn\n * @return {array}\n */\n\n\nfunction replaceString(str, match, fn) {\n  var curCharStart = 0;\n  var curCharLen = 0;\n\n  if (str === '') {\n    return str;\n  } else if (!str || !isString(str)) {\n    throw new TypeError('First argument to react-string-replace#replaceString must be a string');\n  }\n\n  var re = match;\n\n  if (!isRegExp(re)) {\n    re = new RegExp('(' + escapeRegExp(re) + ')', 'gi');\n  }\n\n  var result = str.split(re); // Apply fn to all odd elements\n\n  for (var i = 1, length = result.length; i < length; i += 2) {\n    /** @see {@link https://github.com/iansinnott/react-string-replace/issues/74} */\n    if (result[i] === undefined || result[i - 1] === undefined) {\n      console.warn('reactStringReplace: Encountered undefined value during string replacement. Your RegExp may not be working the way you expect.');\n      continue;\n    }\n\n    curCharLen = result[i].length;\n    curCharStart += result[i - 1].length;\n    result[i] = fn(result[i], i, curCharStart);\n    curCharStart += curCharLen;\n  }\n\n  return result;\n}\n\nmodule.exports = function reactStringReplace(source, match, fn) {\n  if (!Array.isArray(source)) source = [source];\n  return flatten(source.map(function (x) {\n    return isString(x) ? replaceString(x, match, fn) : x;\n  }));\n};","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n//TODO: Complete SEO tags\r\n//* Ref: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\r\n\r\nfunction Seo({ title }) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<title>{title}</title>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nSeo.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n","// extracted by mini-css-extract-plugin\nexport var concept = \"individualMethodology-module--concept--cevpO\";\nexport var imageContainer = \"individualMethodology-module--imageContainer--VjHVT\";\nexport var imageStyle = \"individualMethodology-module--imageStyle--Oa6Ii\";\nexport var image_Concept = \"individualMethodology-module--image_Concept--AiuNt\";\nexport var references = \"individualMethodology-module--references--ShkQs\";\nexport var wrapMargin = \"individualMethodology-module--wrapMargin--6BEHq\";\nexport var wrapMethodology = \"individualMethodology-module--wrapMethodology---xI+k\";","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport reactStringReplace from \"react-string-replace\"\r\n\r\nfunction TextFormatter({ wrapWith, children = \"\" }) {\r\n\t//For bold text\r\n\tconst content = reactStringReplace(\r\n\t\tchildren,\r\n\t\t/\\*\\*(.*?)\\*\\*/gm,\r\n\t\t(match, i) => <b key={i}>{match}</b>\r\n\t)\r\n\r\n\tif (wrapWith === \"p\") return <p>{content}</p>\r\n\tif (wrapWith === \"li\") return <li>{content}</li>\r\n\r\n\treturn <div>{content}</div>\r\n}\r\n\r\nTextFormatter.defaultProps = {\r\n\twrapWith: \"div\",\r\n\tchildren: \"\",\r\n}\r\n\r\nTextFormatter.propTypes = {\r\n\twrapWith: PropTypes.oneOf([\"p\", \"li\", \"div\"]),\r\n\tchildren: PropTypes.string,\r\n}\r\n\r\nexport default TextFormatter\r\n","import React from \"react\"\r\nimport * as styles from \"../../../styles/individualMethodology.module.css\"\r\nimport { Container } from \"../../\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\nimport TextFormatter from \"../../utils/TextFormatter\"\r\n\r\nfunction ImageConcept({ gatsbyImage, title, data }) {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<div className={styles.image_Concept}>\r\n\t\t\t\t<GatsbyImage\r\n\t\t\t\t\timage={gatsbyImage}\r\n\t\t\t\t\talt={title}\r\n\t\t\t\t\tclassName={styles.imageContainer}\r\n\t\t\t\t\timgClassName={styles.imageStyle}\r\n\t\t\t\t\tobjectFit='fill'\r\n\t\t\t\t/>\r\n\t\t\t\t<div className={styles.concept}>\r\n\t\t\t\t\t<h3>¿Qué es?</h3>\r\n\t\t\t\t\t{data.concept.map((p, index) => (\r\n\t\t\t\t\t\t<TextFormatter key={index} wrapWith='p'>\r\n\t\t\t\t\t\t\t{p}\r\n\t\t\t\t\t\t</TextFormatter>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default ImageConcept\r\n","import React from \"react\"\r\nimport { Container } from \"../../\"\r\nimport * as styles from \"../../../styles/individualMethodology.module.css\"\r\nimport TextFormatter from \"../../utils/TextFormatter\"\r\n\r\nfunction SectionContent({ data }) {\r\n\tconst { header, bodyCopy, content } = data\r\n\treturn (\r\n\t\t<Container className={styles.wrapMargin}>\r\n\t\t\t<h3>{header}</h3>\r\n\t\t\t<TextFormatter wrapWith='p'>{bodyCopy}</TextFormatter>\r\n\t\t\t<div>\r\n\t\t\t\t{content.map((item, index) =>\r\n\t\t\t\t\titem.type === \"p\" ? (\r\n\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t{item.p.map((pItem, index) => (\r\n\t\t\t\t\t\t\t\t<TextFormatter key={index} wrapWith='p'>\r\n\t\t\t\t\t\t\t\t\t{pItem}\r\n\t\t\t\t\t\t\t\t</TextFormatter>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : item.type === \"numberList\" ? (\r\n\t\t\t\t\t\t<ol key={index}>\r\n\t\t\t\t\t\t\t{item.list.map((listItem, index) => (\r\n\t\t\t\t\t\t\t\t<TextFormatter key={index} wrapWith='li'>\r\n\t\t\t\t\t\t\t\t\t{listItem}\r\n\t\t\t\t\t\t\t\t</TextFormatter>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<ul key={index}>\r\n\t\t\t\t\t\t\t{item.list.map((listItem, index) => (\r\n\t\t\t\t\t\t\t\t<TextFormatter key={index} wrapWith='li'>\r\n\t\t\t\t\t\t\t\t\t{listItem}\r\n\t\t\t\t\t\t\t\t</TextFormatter>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default SectionContent\r\n","import React from \"react\"\r\nimport { Container } from \"../../\"\r\nimport * as styles from \"../../../styles/individualMethodology.module.css\"\r\nimport TextFormatter from \"../../utils/TextFormatter\"\r\n\r\nfunction SpecialSection({ data }) {\r\n\treturn (\r\n\t\t<Container className='specialSection' innerClassName={styles.wrapMargin}>\r\n\t\t\t<h3>¿Cuándo se utiliza?</h3>\r\n\t\t\t<p>Se utiliza en proyectos con las siguientes características:</p>\r\n\t\t\t<div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{data.content.map((item, index) => (\r\n\t\t\t\t\t\t<TextFormatter key={index} wrapWith='li'>\r\n\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t</TextFormatter>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default SpecialSection\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport reactStringReplace from \"react-string-replace\"\r\n\r\nfunction ReferenceFormatter({ children = \"\" }) {\r\n\tconst regexURL =\r\n\t\t/(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{reactStringReplace(children, regexURL, (match, i) => (\r\n\t\t\t\t<a key={i} href={match} target='_blank' rel='noreferrer'>\r\n\t\t\t\t\t{match}\r\n\t\t\t\t</a>\r\n\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nReferenceFormatter.defaultProps = {\r\n\tchildren: \"\",\r\n}\r\n\r\nReferenceFormatter.propTypes = {\r\n\tchildren: PropTypes.string,\r\n}\r\n\r\nexport default ReferenceFormatter\r\n","import React from \"react\"\r\nimport { Container } from \"../../\"\r\nimport * as styles from \"../../../styles/individualMethodology.module.css\"\r\nimport ReferenceFormatter from \"../../utils/ReferenceFormatter\"\r\n\r\nfunction ReferencesSection({ data }) {\r\n\treturn (\r\n\t\t<Container className={styles.references}>\r\n\t\t\t<h3>Referencias</h3>\r\n\t\t\t<div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{data.content.map((item, index) => (\r\n\t\t\t\t\t\t<li key={index}>\r\n\t\t\t\t\t\t\t<ReferenceFormatter>{item}</ReferenceFormatter>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default ReferencesSection\r\n","import React from \"react\"\r\nimport { HeroWithType } from \"../components\"\r\nimport Seo from \"../components/utils/Seo\"\r\nimport * as styles from \"../styles/individualMethodology.module.css\"\r\nimport {\r\n\tImageConcept,\r\n\tReferencesSection,\r\n\tSectionContent,\r\n\tSpecialSection,\r\n} from \"../components/page/IndividualMethodology\"\r\n\r\nfunction IndividualMethodology({ pageContext }) {\r\n\tconst { title, type, image, content } = pageContext\r\n\r\n\treturn (\r\n\t\t<div className={styles.wrapMethodology}>\r\n\t\t\t<HeroWithType title={title} type={type} />\r\n\t\t\t{content.map((item, index) => (\r\n\t\t\t\t<SelectContent key={index} title={title} image={image} content={item} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst SelectContent = ({ title, image, content }) => {\r\n\tconst { type } = content\r\n\r\n\tif (type === \"ImageConcept\")\r\n\t\treturn (\r\n\t\t\t<ImageConcept\r\n\t\t\t\tgatsbyImage={image.childImageSharp.gatsbyImageData}\r\n\t\t\t\ttitle={title}\r\n\t\t\t\tdata={content}\r\n\t\t\t/>\r\n\t\t)\r\n\tif (type === \"section\") return <SectionContent data={content} />\r\n\tif (type === \"specialSection\") return <SpecialSection data={content} />\r\n\tif (type === \"references\") return <ReferencesSection data={content} />\r\n\r\n\treturn <div>No Content</div>\r\n}\r\n\r\nexport const Head = ({ pageContext }) => {\r\n\tconsole.log(pageContext)\r\n\r\n\treturn <Seo title={pageContext.title} />\r\n}\r\n\r\nexport default IndividualMethodology\r\n"],"names":["isString","value","replaceString","str","match","fn","curCharStart","curCharLen","TypeError","string","reRegExpChar","reHasRegExpChar","re","RegExp","isRegExp","source","test","replace","result","split","i","length","undefined","console","warn","module","exports","Array","isArray","array","map","x","newArray","forEach","item","concat","push","title","wrapMargin","TextFormatter","wrapWith","children","content","reactStringReplace","key","defaultProps","gatsbyImage","data","className","G","image","alt","imgClassName","objectFit","concept","p","index","header","bodyCopy","styles","type","pItem","list","listItem","innerClassName","ReferenceFormatter","href","target","rel","SelectContent","childImageSharp","gatsbyImageData","Head","pageContext","log","Seo"],"sourceRoot":""}
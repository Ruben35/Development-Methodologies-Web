{"version":3,"file":"component---src-templates-individual-methodology-js-4ad00732ffc24ec190b8.js","mappings":"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","sources":["webpack://metodologias-de-desarrollo-de-proyectos/./node_modules/react-string-replace/index.js","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/utils/Seo.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/utils/hooks/useSiteMetadata.js","webpack://metodologias-de-desarrollo-de-proyectos/./src/styles/individualMethodology.module.css","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/utils/TextFormatter.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/page/IndividualMethodology/ImageConcept.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/page/IndividualMethodology/SectionContent.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/page/IndividualMethodology/SpecialSection.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/utils/ReferenceFormatter.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/page/IndividualMethodology/ReferencesSection.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/templates/IndividualMethodology.js"],"sourcesContent":["/* eslint-disable vars-on-top, no-var, prefer-template */\nvar isRegExp = function isRegExp(re) {\n  return re instanceof RegExp;\n};\n\nvar escapeRegExp = function escapeRegExp(string) {\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n  return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\\\$&') : string;\n};\n\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\n\nvar flatten = function flatten(array) {\n  var newArray = [];\n  array.forEach(function (item) {\n    if (Array.isArray(item)) {\n      newArray = newArray.concat(item);\n    } else {\n      newArray.push(item);\n    }\n  });\n  return newArray;\n};\n/**\n * Given a string, replace every substring that is matched by the `match` regex\n * with the result of calling `fn` on matched substring. The result will be an\n * array with all odd indexed elements containing the replacements. The primary\n * use case is similar to using String.prototype.replace except for React.\n *\n * React will happily render an array as children of a react element, which\n * makes this approach very useful for tasks like surrounding certain text\n * within a string with react elements.\n *\n * Example:\n * matchReplace(\n *   'Emphasize all phone numbers like 884-555-4443.',\n *   /([\\d|-]+)/g,\n *   (number, i) => <strong key={i}>{number}</strong>\n * );\n * // => ['Emphasize all phone numbers like ', <strong>884-555-4443</strong>, '.'\n *\n * @param {string} str\n * @param {RegExp|str} match Must contain a matching group\n * @param {function} fn\n * @return {array}\n */\n\n\nfunction replaceString(str, match, fn) {\n  var curCharStart = 0;\n  var curCharLen = 0;\n\n  if (str === '') {\n    return str;\n  } else if (!str || !isString(str)) {\n    throw new TypeError('First argument to react-string-replace#replaceString must be a string');\n  }\n\n  var re = match;\n\n  if (!isRegExp(re)) {\n    re = new RegExp('(' + escapeRegExp(re) + ')', 'gi');\n  }\n\n  var result = str.split(re); // Apply fn to all odd elements\n\n  for (var i = 1, length = result.length; i < length; i += 2) {\n    /** @see {@link https://github.com/iansinnott/react-string-replace/issues/74} */\n    if (result[i] === undefined || result[i - 1] === undefined) {\n      console.warn('reactStringReplace: Encountered undefined value during string replacement. Your RegExp may not be working the way you expect.');\n      continue;\n    }\n\n    curCharLen = result[i].length;\n    curCharStart += result[i - 1].length;\n    result[i] = fn(result[i], i, curCharStart);\n    curCharStart += curCharLen;\n  }\n\n  return result;\n}\n\nmodule.exports = function reactStringReplace(source, match, fn) {\n  if (!Array.isArray(source)) source = [source];\n  return flatten(source.map(function (x) {\n    return isString(x) ? replaceString(x, match, fn) : x;\n  }));\n};","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useSiteMetadata } from \"../../utils/hooks/useSiteMetadata\"\n\nfunction Seo({ title, description, pathname, image, children }) {\n\tconst { defaultTitle, defaultDescription, author, siteUrl, defaultImage } =\n\t\tuseSiteMetadata()\n\n\tconst metadata = {\n\t\ttitle: title ? `${title} | ${defaultTitle}` : defaultTitle,\n\t\tdescription: description || defaultDescription,\n\t\tauthor: author,\n\t\turl: `${siteUrl}${pathname || ``}`,\n\t\timage: `${siteUrl}${image || defaultImage}`,\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<title>{metadata.title}</title>\n\t\t\t<meta name='description' content={metadata.description} />\n\t\t\t<meta name='author' content={metadata.author} />\n\t\t\t<link rel='canonical' href={metadata.url} />\n\t\t\t<meta name='robots' content='index, follow' />\n\t\t\t{/* FACEBOOK OPEN GRAPH PROTOCOL META TAGS */}\n\t\t\t<meta property='og:title' content={metadata.title} />\n\t\t\t<meta property='og:description' content={metadata.description} />\n\t\t\t<meta property='og:url' content={metadata.url} />\n\t\t\t<meta property='og:image' content={metadata.image} />\n\t\t\t<meta property='og:site_name' content={defaultTitle} />\n\t\t\t{/* TWITTER META TAGS */}\n\t\t\t<meta name='twitter:title' content={metadata.title} />\n\t\t\t<meta name='twitter:description' content={metadata.description} />\n\t\t\t<meta name='twitter:image' content={metadata.image} />\n\t\t\t<meta name='twitter:card' content='summary_large_image' />\n\t\t\t{children}\n\t\t</>\n\t)\n}\n\nSeo.propTypes = {\n\ttitle: PropTypes.string,\n\tdescription: PropTypes.string,\n\tpathname: PropTypes.string,\n\timage: PropTypes.string,\n\tchildren: PropTypes.node,\n}\n\nexport default Seo\n","import { graphql, useStaticQuery } from \"gatsby\"\nexport const useSiteMetadata = () => {\n\tconst data = useStaticQuery(graphql`\n\t\tquery {\n\t\t\tsite {\n\t\t\t\tsiteMetadata {\n\t\t\t\t\tdefaultTitle: title\n\t\t\t\t\tdefaultDescription: description\n\t\t\t\t\tauthor\n\t\t\t\t\tsiteUrl\n\t\t\t\t\tdefaultImage: image\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`)\n\treturn data.site.siteMetadata\n}\n","// extracted by mini-css-extract-plugin\nexport var concept = \"individualMethodology-module--concept--cevpO\";\nexport var imageContainer = \"individualMethodology-module--imageContainer--VjHVT\";\nexport var imageStyle = \"individualMethodology-module--imageStyle--Oa6Ii\";\nexport var image_Concept = \"individualMethodology-module--image_Concept--AiuNt\";\nexport var references = \"individualMethodology-module--references--ShkQs\";\nexport var wrapMargin = \"individualMethodology-module--wrapMargin--6BEHq\";\nexport var wrapMethodology = \"individualMethodology-module--wrapMethodology---xI+k\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport reactStringReplace from \"react-string-replace\"\n\nfunction TextFormatter({ wrapWith, children = \"\" }) {\n\t//For bold text\n\tconst content = reactStringReplace(\n\t\tchildren,\n\t\t/\\*\\*(.*?)\\*\\*/gm,\n\t\t(match, i) => <b key={i}>{match}</b>\n\t)\n\n\tif (wrapWith === \"p\") return <p>{content}</p>\n\tif (wrapWith === \"li\") return <li>{content}</li>\n\n\treturn <div>{content}</div>\n}\n\nTextFormatter.defaultProps = {\n\twrapWith: \"div\",\n\tchildren: \"\",\n}\n\nTextFormatter.propTypes = {\n\twrapWith: PropTypes.oneOf([\"p\", \"li\", \"div\"]),\n\tchildren: PropTypes.string,\n}\n\nexport default TextFormatter\n","import React from \"react\"\nimport * as styles from \"../../../styles/individualMethodology.module.css\"\nimport { Container } from \"../../\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport TextFormatter from \"../../utils/TextFormatter\"\n\nfunction ImageConcept({ gatsbyImage, title, data }) {\n\treturn (\n\t\t<Container>\n\t\t\t<div className={styles.image_Concept}>\n\t\t\t\t<GatsbyImage\n\t\t\t\t\timage={gatsbyImage}\n\t\t\t\t\talt={title}\n\t\t\t\t\tclassName={styles.imageContainer}\n\t\t\t\t\timgClassName={styles.imageStyle}\n\t\t\t\t\tobjectFit='fill'\n\t\t\t\t/>\n\t\t\t\t<div className={styles.concept}>\n\t\t\t\t\t<h3>¿Qué es?</h3>\n\t\t\t\t\t{data.concept.map((p, index) => (\n\t\t\t\t\t\t<TextFormatter key={index} wrapWith='p'>\n\t\t\t\t\t\t\t{p}\n\t\t\t\t\t\t</TextFormatter>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Container>\n\t)\n}\n\nexport default ImageConcept\n","import React from \"react\"\nimport { Container } from \"../../\"\nimport * as styles from \"../../../styles/individualMethodology.module.css\"\nimport TextFormatter from \"../../utils/TextFormatter\"\n\nfunction SectionContent({ data }) {\n\tconst { header, bodyCopy, content } = data\n\treturn (\n\t\t<Container className={styles.wrapMargin}>\n\t\t\t<h3>{header}</h3>\n\t\t\t<TextFormatter wrapWith='p'>{bodyCopy}</TextFormatter>\n\t\t\t<div>\n\t\t\t\t{content.map((item, index) =>\n\t\t\t\t\titem.type === \"p\" ? (\n\t\t\t\t\t\t<div key={index}>\n\t\t\t\t\t\t\t{item.p.map((pItem, index) => (\n\t\t\t\t\t\t\t\t<TextFormatter key={index} wrapWith='p'>\n\t\t\t\t\t\t\t\t\t{pItem}\n\t\t\t\t\t\t\t\t</TextFormatter>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : item.type === \"numberList\" ? (\n\t\t\t\t\t\t<ol key={index}>\n\t\t\t\t\t\t\t{item.list.map((listItem, index) => (\n\t\t\t\t\t\t\t\t<TextFormatter key={index} wrapWith='li'>\n\t\t\t\t\t\t\t\t\t{listItem}\n\t\t\t\t\t\t\t\t</TextFormatter>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ol>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ul key={index}>\n\t\t\t\t\t\t\t{item.list.map((listItem, index) => (\n\t\t\t\t\t\t\t\t<TextFormatter key={index} wrapWith='li'>\n\t\t\t\t\t\t\t\t\t{listItem}\n\t\t\t\t\t\t\t\t</TextFormatter>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Container>\n\t)\n}\n\nexport default SectionContent\n","import React from \"react\"\nimport { Container } from \"../../\"\nimport * as styles from \"../../../styles/individualMethodology.module.css\"\nimport TextFormatter from \"../../utils/TextFormatter\"\n\nfunction SpecialSection({ data }) {\n\treturn (\n\t\t<Container className='specialSection' innerClassName={styles.wrapMargin}>\n\t\t\t<h3>¿Cuándo se utiliza?</h3>\n\t\t\t<p>Se utiliza en proyectos con las siguientes características:</p>\n\t\t\t<div>\n\t\t\t\t<ul>\n\t\t\t\t\t{data.content.map((item, index) => (\n\t\t\t\t\t\t<TextFormatter key={index} wrapWith='li'>\n\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t</TextFormatter>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</Container>\n\t)\n}\n\nexport default SpecialSection\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport reactStringReplace from \"react-string-replace\"\n\nfunction ReferenceFormatter({ children = \"\" }) {\n\tconst regexURL =\n\t\t/(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi\n\n\treturn (\n\t\t<>\n\t\t\t{reactStringReplace(children, regexURL, (match, i) => (\n\t\t\t\t<a key={i} href={match} target='_blank' rel='noreferrer'>\n\t\t\t\t\t{match}\n\t\t\t\t</a>\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nReferenceFormatter.defaultProps = {\n\tchildren: \"\",\n}\n\nReferenceFormatter.propTypes = {\n\tchildren: PropTypes.string,\n}\n\nexport default ReferenceFormatter\n","import React from \"react\"\nimport { Container } from \"../../\"\nimport * as styles from \"../../../styles/individualMethodology.module.css\"\nimport ReferenceFormatter from \"../../utils/ReferenceFormatter\"\n\nfunction ReferencesSection({ data }) {\n\treturn (\n\t\t<Container className={styles.references}>\n\t\t\t<h3>Referencias</h3>\n\t\t\t<div>\n\t\t\t\t<ul>\n\t\t\t\t\t{data.content.map((item, index) => (\n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t<ReferenceFormatter>{item}</ReferenceFormatter>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</Container>\n\t)\n}\n\nexport default ReferencesSection\n","import React from \"react\"\nimport { HeroWithType } from \"../components\"\nimport Seo from \"../components/utils/Seo\"\nimport * as styles from \"../styles/individualMethodology.module.css\"\nimport {\n\tImageConcept,\n\tReferencesSection,\n\tSectionContent,\n\tSpecialSection,\n} from \"../components/page/IndividualMethodology\"\n\nfunction IndividualMethodology({ pageContext }) {\n\tconst { title, type, image, content } = pageContext\n\n\treturn (\n\t\t<div className={styles.wrapMethodology}>\n\t\t\t<HeroWithType title={title} type={type} />\n\t\t\t{content.map((item, index) => (\n\t\t\t\t<SelectContent key={index} title={title} image={image} content={item} />\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nconst SelectContent = ({ title, image, content }) => {\n\tconst { type } = content\n\n\tif (type === \"ImageConcept\")\n\t\treturn (\n\t\t\t<ImageConcept\n\t\t\t\tgatsbyImage={image.childImageSharp.gatsbyImageData}\n\t\t\t\ttitle={title}\n\t\t\t\tdata={content}\n\t\t\t/>\n\t\t)\n\tif (type === \"section\") return <SectionContent data={content} />\n\tif (type === \"specialSection\") return <SpecialSection data={content} />\n\tif (type === \"references\") return <ReferencesSection data={content} />\n\n\treturn <div>No Content</div>\n}\n\nexport const Head = ({ pageContext }) => {\n\treturn (\n\t\t<Seo\n\t\t\ttitle={pageContext.title}\n\t\t\tpathname={pageContext.pathname}\n\t\t\tdescription={pageContext.content[0].concept[0]}\n\t\t\t// Replacing prefix with none\n\t\t\timage={pageContext.image.childImageSharp.gatsbyImageData.images.fallback.src.replace(\n\t\t\t\t\"/Development-Methodologies-Web\",\n\t\t\t\t\"\"\n\t\t\t)}\n\t\t/>\n\t)\n}\n\nexport default IndividualMethodology\n"],"names":["isString","value","replaceString","str","match","fn","curCharStart","curCharLen","TypeError","string","reRegExpChar","reHasRegExpChar","re","RegExp","isRegExp","source","test","replace","result","split","i","length","undefined","console","warn","module","exports","Array","isArray","array","map","x","newArray","forEach","item","concat","push","title","description","pathname","image","children","useStaticQuery","site","siteMetadata","defaultTitle","defaultDescription","author","siteUrl","defaultImage","metadata","url","name","content","rel","href","property","wrapMargin","TextFormatter","wrapWith","reactStringReplace","key","defaultProps","gatsbyImage","data","className","G","alt","imgClassName","objectFit","concept","p","index","header","bodyCopy","styles","type","pItem","list","listItem","innerClassName","ReferenceFormatter","target","SelectContent","childImageSharp","gatsbyImageData","Head","pageContext","Seo","images","fallback","src"],"sourceRoot":""}
{"version":3,"file":"component---src-templates-individual-methodology-js-0ef4615d5c5f9d07bd55.js","mappings":"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","sources":["webpack://metodologias-de-desarrollo-de-proyectos/./node_modules/react-string-replace/index.js","webpack://metodologias-de-desarrollo-de-proyectos/./src/styles/individualMethodology.module.css","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/utils/TextFormatter.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/page/IndividualMethodology/ImageConcept.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/page/IndividualMethodology/SectionContent.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/page/IndividualMethodology/SpecialSection.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/components/page/IndividualMethodology/ReferencesSection.jsx","webpack://metodologias-de-desarrollo-de-proyectos/./src/templates/IndividualMethodology.js"],"sourcesContent":["/* eslint-disable vars-on-top, no-var, prefer-template */\nvar isRegExp = function isRegExp(re) {\n  return re instanceof RegExp;\n};\n\nvar escapeRegExp = function escapeRegExp(string) {\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n  return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\\\$&') : string;\n};\n\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\n\nvar flatten = function flatten(array) {\n  var newArray = [];\n  array.forEach(function (item) {\n    if (Array.isArray(item)) {\n      newArray = newArray.concat(item);\n    } else {\n      newArray.push(item);\n    }\n  });\n  return newArray;\n};\n/**\n * Given a string, replace every substring that is matched by the `match` regex\n * with the result of calling `fn` on matched substring. The result will be an\n * array with all odd indexed elements containing the replacements. The primary\n * use case is similar to using String.prototype.replace except for React.\n *\n * React will happily render an array as children of a react element, which\n * makes this approach very useful for tasks like surrounding certain text\n * within a string with react elements.\n *\n * Example:\n * matchReplace(\n *   'Emphasize all phone numbers like 884-555-4443.',\n *   /([\\d|-]+)/g,\n *   (number, i) => <strong key={i}>{number}</strong>\n * );\n * // => ['Emphasize all phone numbers like ', <strong>884-555-4443</strong>, '.'\n *\n * @param {string} str\n * @param {RegExp|str} match Must contain a matching group\n * @param {function} fn\n * @return {array}\n */\n\n\nfunction replaceString(str, match, fn) {\n  var curCharStart = 0;\n  var curCharLen = 0;\n\n  if (str === '') {\n    return str;\n  } else if (!str || !isString(str)) {\n    throw new TypeError('First argument to react-string-replace#replaceString must be a string');\n  }\n\n  var re = match;\n\n  if (!isRegExp(re)) {\n    re = new RegExp('(' + escapeRegExp(re) + ')', 'gi');\n  }\n\n  var result = str.split(re); // Apply fn to all odd elements\n\n  for (var i = 1, length = result.length; i < length; i += 2) {\n    /** @see {@link https://github.com/iansinnott/react-string-replace/issues/74} */\n    if (result[i] === undefined || result[i - 1] === undefined) {\n      console.warn('reactStringReplace: Encountered undefined value during string replacement. Your RegExp may not be working the way you expect.');\n      continue;\n    }\n\n    curCharLen = result[i].length;\n    curCharStart += result[i - 1].length;\n    result[i] = fn(result[i], i, curCharStart);\n    curCharStart += curCharLen;\n  }\n\n  return result;\n}\n\nmodule.exports = function reactStringReplace(source, match, fn) {\n  if (!Array.isArray(source)) source = [source];\n  return flatten(source.map(function (x) {\n    return isString(x) ? replaceString(x, match, fn) : x;\n  }));\n};","// extracted by mini-css-extract-plugin\nexport var imageStyle = \"individualMethodology-module--imageStyle--Oa6Ii\";\nexport var image_Concept = \"individualMethodology-module--image_Concept--AiuNt\";\nexport var references = \"individualMethodology-module--references--ShkQs\";\nexport var wrapMargin = \"individualMethodology-module--wrapMargin--6BEHq\";\nexport var wrapMethodology = \"individualMethodology-module--wrapMethodology---xI+k\";","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport reactStringReplace from \"react-string-replace\"\r\n\r\nfunction TextFormatter({ wrapWith, children = \"\" }) {\r\n\t//For bold text\r\n\tconst content = reactStringReplace(\r\n\t\tchildren,\r\n\t\t/\\*\\*(.*?)\\*\\*/gm,\r\n\t\t(match, i) => <b key={i}>{match}</b>\r\n\t)\r\n\r\n\tif (wrapWith === \"p\") return <p>{content}</p>\r\n\tif (wrapWith === \"li\") return <li>{content}</li>\r\n\r\n\treturn <div>{content}</div>\r\n}\r\n\r\nTextFormatter.defaultProps = {\r\n\twrapWith: \"div\",\r\n\tchildren: \"\",\r\n}\r\n\r\nTextFormatter.propTypes = {\r\n\twrapWith: PropTypes.oneOf([\"p\", \"li\", \"div\"]),\r\n\tchildren: PropTypes.string,\r\n}\r\n\r\nexport default TextFormatter\r\n","import React from \"react\"\r\nimport * as styles from \"../../../styles/individualMethodology.module.css\"\r\nimport { Container } from \"../../\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\nimport TextFormatter from \"../../utils/TextFormatter\"\r\n\r\nfunction ImageConcept({ gatsbyImage, title, data }) {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<div className={styles.image_Concept}>\r\n\t\t\t\t<GatsbyImage\r\n\t\t\t\t\timage={gatsbyImage}\r\n\t\t\t\t\talt={title}\r\n\t\t\t\t\tclassName={styles.imageStyle}\r\n\t\t\t\t/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3>¿Cómo funciona</h3>\r\n\t\t\t\t\t{data.concept.map((p, index) => (\r\n\t\t\t\t\t\t<TextFormatter key={index} wrapWith='p'>\r\n\t\t\t\t\t\t\t{p}\r\n\t\t\t\t\t\t</TextFormatter>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default ImageConcept\r\n","import React from \"react\"\r\nimport { Container } from \"../../\"\r\nimport * as styles from \"../../../styles/individualMethodology.module.css\"\r\nimport TextFormatter from \"../../utils/TextFormatter\"\r\n\r\nfunction SectionContent({ data }) {\r\n\tconst { header, bodyCopy, content } = data\r\n\treturn (\r\n\t\t<Container className={styles.wrapMargin}>\r\n\t\t\t<h3>{header}</h3>\r\n\t\t\t<p>{bodyCopy}</p>\r\n\t\t\t<div>\r\n\t\t\t\t{content.map((item, index) =>\r\n\t\t\t\t\titem.type === \"p\" ? (\r\n\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t{item.p.map((pItem, index) => (\r\n\t\t\t\t\t\t\t\t<TextFormatter key={index} wrapWith='p'>\r\n\t\t\t\t\t\t\t\t\t{pItem}\r\n\t\t\t\t\t\t\t\t</TextFormatter>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<ul key={index}>\r\n\t\t\t\t\t\t\t{item.list.map((listItem, index) => (\r\n\t\t\t\t\t\t\t\t<TextFormatter key={index} wrapWith='li'>\r\n\t\t\t\t\t\t\t\t\t{listItem}\r\n\t\t\t\t\t\t\t\t</TextFormatter>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default SectionContent\r\n","import React from \"react\"\r\nimport { Container } from \"../../\"\r\nimport * as styles from \"../../../styles/individualMethodology.module.css\"\r\nimport TextFormatter from \"../../utils/TextFormatter\"\r\n\r\nfunction SpecialSection({ data }) {\r\n\treturn (\r\n\t\t<Container className='specialSection' innerClassName={styles.wrapMargin}>\r\n\t\t\t<h3>¿Cuándo se utiliza?</h3>\r\n\t\t\t<p>Se utiliza en proyectos con las siguientes características:</p>\r\n\t\t\t<div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{data.content.map((item, index) => (\r\n\t\t\t\t\t\t<TextFormatter key={index} wrapWith='li'>\r\n\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t</TextFormatter>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default SpecialSection\r\n","import React from \"react\"\r\nimport { Container } from \"../../\"\r\nimport * as styles from \"../../../styles/individualMethodology.module.css\"\r\n\r\nfunction ReferencesSection({ data }) {\r\n\treturn (\r\n\t\t<Container className={styles.references}>\r\n\t\t\t<h3>Referencias</h3>\r\n\t\t\t<div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{data.content.map((item, index) => (\r\n\t\t\t\t\t\t<li key={index}>\r\n\t\t\t\t\t\t\t<a href={item} target='_blank' rel='noreferrer'>\r\n\t\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default ReferencesSection\r\n","import React from \"react\"\r\nimport { HeroWithType } from \"../components\"\r\nimport * as styles from \"../styles/individualMethodology.module.css\"\r\nimport {\r\n\tImageConcept,\r\n\tReferencesSection,\r\n\tSectionContent,\r\n\tSpecialSection,\r\n} from \"../components/page/IndividualMethodology\"\r\n\r\nfunction IndividualMethodology({ pageContext }) {\r\n\tconst { title, type, image, content } = pageContext\r\n\r\n\treturn (\r\n\t\t<div className={styles.wrapMethodology}>\r\n\t\t\t<HeroWithType title={title} type={type} />\r\n\t\t\t{content.map((item, index) => (\r\n\t\t\t\t<SelectContent key={index} title={title} image={image} content={item} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst SelectContent = ({ title, image, content }) => {\r\n\tconst { type } = content\r\n\r\n\tif (type === \"ImageConcept\")\r\n\t\treturn (\r\n\t\t\t<ImageConcept\r\n\t\t\t\tgatsbyImage={image.childImageSharp.gatsbyImageData}\r\n\t\t\t\ttitle={title}\r\n\t\t\t\tdata={content}\r\n\t\t\t/>\r\n\t\t)\r\n\tif (type === \"section\") return <SectionContent data={content} />\r\n\tif (type === \"specialSection\") return <SpecialSection data={content} />\r\n\tif (type === \"references\") return <ReferencesSection data={content} />\r\n\r\n\treturn <div>No Content</div>\r\n}\r\n\r\nexport default IndividualMethodology\r\n"],"names":["isString","value","replaceString","str","match","fn","curCharStart","curCharLen","TypeError","string","reRegExpChar","reHasRegExpChar","re","RegExp","isRegExp","source","test","replace","result","split","i","length","undefined","console","warn","module","exports","Array","isArray","array","map","x","newArray","forEach","item","concat","push","wrapMargin","TextFormatter","wrapWith","children","content","reactStringReplace","key","defaultProps","gatsbyImage","title","data","className","G","image","alt","concept","p","index","header","bodyCopy","styles","type","pItem","list","listItem","innerClassName","href","target","rel","SelectContent","childImageSharp","gatsbyImageData","pageContext"],"sourceRoot":""}